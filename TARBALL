#!/bin/bash
#TARBALL.sh - Generate compressed tar.gz of specified files.
# 7/1/21.	wmk.
#
#	Usage. bash TARBALL <path>
#		<path> - filepath to obtain files from
#		<tarname> - [optional] TARBALL filename ('.tar.gz' will be added)
#
# Dependencies.
#	($)BACKUP_PATH env var set to non-null; points to where .tar.gz lands.
#	user ($)PWD is root directory for <path> downstream files to dump.
#
# Modification History.
# ---------------------
# 6/28/21.	wmk.	original code (multihost support).
# 7/1/21.	wmk.	Dependencies documentation updated.
# function definition
function jumpto
{
    label=$1
    cmd=$(sed -n "/$label:/{:a;n;p;ba};" $0 | grep -v ':$')
    eval "$cmd"
    exit
}
P1=$1
P2=$2
if [ "$HOME" == "/home/ubuntu" ]; then
 folderbase=$HOME
else 
 folderbase=/media/ubuntu/Windows/Users/Bill
fi
if [ -z "$system_log" ]; then
 system_log=$folderbase/ubuntu/SystemLog.txt
fi
#
local_debug=0	# set to 1 for debugging
#local_debug=1
#
# handle case where called from Make.
if [ -z "$system_log" ]; then
  system_log=$folderbase/ubuntu/SystemLog.txt
  TEMP_PATH=.folderbase/temp
  bash ~/sysprocs/LOGMSG "   TARBALL initiated from Make."
  echo "   TARBALL initiated."
else
  bash ~/sysprocs/LOGMSG "   TARBALL initiated from Terminal."
  echo "   TARBALL initiated."
fi
#
if [ -z "$P1" ]; then
  echo "  TARBALL ignored.. must specify <source-path>." >> $system_log #
  echo "  TARBALL ignored.. must specify <source-path>."
  exit 1
else
  echo "  TARBALL $P1 - initiated from Terminal" >> $system_log #
  echo "  TARBALL $P1 - initiated from Terminal"
fi 
if [ -z "$P2" ]; then
  P2=tarball.tar.gz
else
  P_TEMP=$P2
  P2=$P_TEMP.tar.gz
fi
#
if [ $local_debug = 1 ]; then
 pushd ./
 cd ~/Documents		# write files to Documents folder
fi

#proc body here
#tar --help
echo "tar --directory=$P1  --create --file=$BACKUP_PATH$P2 --gzip $P1"
~/sysprocs/LOGMSG "tar --directory=$P1  --create --file=$BACKUP_PATH$P2 --gzip $P1"
tar --directory=$P1  --create --file=$BACKUP_PATH$P2 --gzip $P1
#end proc body
if [ $local_debug = 1 ]; then
 popd
fi
jumpto EndProc
EndProc:
notify-send "TARBALL" "TARBALL $1"
~/sysprocs/LOGMSG "  TARBALL $1 complete."
echo "  TARBALL $P1 complete"
~/sysprocs/LOGMSG "TARBALL $1 complete."
#end TARBALL
